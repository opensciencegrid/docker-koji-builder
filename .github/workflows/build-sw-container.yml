name: Build and Push Docker image

on:
  push:
    branches: [ main ]
  repository_dispatch:
    types:
      - dispatch-build
  workflow_dispatch:
  
jobs:
  make-date-tag:
    runs-on: ubuntu-latest
    if: startsWith(github.repository, 'opensciencegrid/')
    outputs:
      dtag: ${{ steps.mkdatetag.outputs.dtag }}
    steps:
    - name: make date tag
      id: mkdatetag
      run: echo "::set-output name=dtag::$(date +%Y%m%d-%H%M)"
      
  build:
    runs-on: ubuntu-latest
    needs: [make-date-tag]
    if: startsWith(github.repository, 'opensciencegrid/')
    strategy:
      fail-fast: False
      matrix:
        repo: ['release']
    steps:
    - uses: actions/checkout@v2

    - id: generate-tag-list
      env:
        REPO: ${{ matrix.repo }}
        TIMESTAMP: ${{ needs.make-date-tag.outputs.dtag }}
      run: |
        docker_repo=${GITHUB_REPOSITORY/mtru32\/docker-/mtru32/}
        tag_list=()
        for registry in hub.opensciencegrid.org docker.io; do
          for image_tag in "$REPO" "$REPO-$TIMESTAMP"; do
            tag_list+=("$registry/$docker_repo":"$image_tag")
          done
        done
        # This causes the tag_list array to be comma-separated below,
        # which is required for build-push-action
        IFS=,
        echo "::set-output name=taglist::${tag_list[*]}"
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Log in to OSG Harbor
      uses: docker/login-action@v1
      with:
        registry: hub.opensciencegrid.org
        username: ${{ secrets.OSG_HARBOR_ROBOT_USER }}
        password: ${{ secrets.OSG_HARBOR_ROBOT_PASSWORD }}

    - name: Build and push Docker images
      uses: docker/build-push-action@v2.2.0
      with:
        context: .
        push: true
        build-args: BASE_YUM_REPO=${{ matrix.repo }}
        tags: "${{ steps.generate-tag-list.outputs.taglist }}"
